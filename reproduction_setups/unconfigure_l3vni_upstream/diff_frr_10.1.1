diff --git a/bgpd/bgp_evpn.c b/bgpd/bgp_evpn.c
index 7af6ff7ce..99e1e637f 100644
--- a/bgpd/bgp_evpn.c
+++ b/bgpd/bgp_evpn.c
@@ -6781,6 +6781,11 @@ int bgp_evpn_local_l3vni_add(vni_t l3vni, vrf_id_t vrf_id,
 
 	/* if the BGP vrf instance doesn't exist - create one */
 	bgp_vrf = bgp_lookup_by_vrf_id(vrf_id);
+	if (!bgp_vrf) {
+		zlog_debug("PSUCHY: bgp_vrf is not found");
+	} else {
+		zlog_debug("PSUCHY: bgp_vrf is %s", vrf_id_to_name(bgp_vrf->vrf_id));
+	}
 	if (!bgp_vrf) {
 
 		int ret = 0;
@@ -6804,6 +6809,10 @@ int bgp_evpn_local_l3vni_add(vni_t l3vni, vrf_id_t vrf_id,
 
 		/* mark as auto created */
 		SET_FLAG(bgp_vrf->vrf_flags, BGP_VRF_AUTO);
+		if (bgp_debug_zebra(NULL))
+			zlog_debug(
+				"PSUCHY: VRF %s vni %u IS SET TO AUTO",
+                vrf_id_to_name(bgp_vrf->vrf_id), bgp_vrf->l3vni);
 	}
 
 	/* associate the vrf with l3vni and related parameters */
diff --git a/bgpd/bgp_evpn_vty.c b/bgpd/bgp_evpn_vty.c
index 846a82ba9..7225919ce 100644
--- a/bgpd/bgp_evpn_vty.c
+++ b/bgpd/bgp_evpn_vty.c
@@ -6527,6 +6527,7 @@ DEFUN (show_bgp_vrf_l3vni_info,
 		vty_out(vty, "BGP VRF: %s\n", name);
 		vty_out(vty, "  Local-Ip: %pI4\n", &bgp->originator_ip);
 		vty_out(vty, "  L3-VNI: %u\n", bgp->l3vni);
+		vty_out(vty, "  FLAGS: %u\n", bgp->vrf_flags);
 		vty_out(vty, "  Rmac: %s\n",
 			prefix_mac2str(&bgp->rmac, buf, sizeof(buf)));
 		vty_out(vty, "  VNI Filter: %s\n",
diff --git a/bgpd/bgp_vty.c b/bgpd/bgp_vty.c
index 1a87799ad..726afb93e 100644
--- a/bgpd/bgp_vty.c
+++ b/bgpd/bgp_vty.c
@@ -12626,6 +12626,7 @@ static void bgp_show_all_instances_summary_vty(struct vty *vty, afi_t afi,
 
 	for (ALL_LIST_ELEMENTS(bm->bgp, node, nnode, bgp)) {
 		if (CHECK_FLAG(bgp->vrf_flags, BGP_VRF_AUTO))
+			zlog_debug("PSUCHY: VRF_AUTO for vrf %s vni %d", vrf_id_to_name(bgp->vrf_id), bgp->l3vni);
 			continue;
 
 		nbr_output = true;
diff --git a/bgpd/bgpd.c b/bgpd/bgpd.c
index 894226ada..559deb9fa 100644
--- a/bgpd/bgpd.c
+++ b/bgpd/bgpd.c
@@ -3621,8 +3621,10 @@ struct bgp *bgp_lookup_by_name(const char *name)
 	struct listnode *node, *nnode;
 
 	for (ALL_LIST_ELEMENTS(bm->bgp, node, nnode, bgp)) {
-		if (CHECK_FLAG(bgp->vrf_flags, BGP_VRF_AUTO))
+		if (CHECK_FLAG(bgp->vrf_flags, BGP_VRF_AUTO)) {
+			zlog_warn("PSUCHY: it skips bgp instance %s", name);
 			continue;
+		}
 		if ((bgp->name == NULL && name == NULL)
 		    || (bgp->name && name && strcmp(bgp->name, name) == 0))
 			return bgp;
